{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useReveosData } from \"contexts/ReveosDataContext\";\nconst METRIC_CONFIGS = {\n  plateletVolume: {\n    label: \"Volume de Plaquetas\",\n    dataKey: \"PlateletVolume\",\n    color: \"warning\",\n    unit: \"mL\"\n  },\n  plasmaVolume: {\n    label: \"Volume de Plasma\",\n    dataKey: \"PlasmaVolume\",\n    color: \"success\",\n    unit: \"mL\"\n  },\n  leukocyteVolume: {\n    label: \"Volume de Leucócitos\",\n    dataKey: \"LeucocyteVolume\",\n    color: \"secondary\",\n    unit: \"mL\"\n  },\n  plateletIndex: {\n    label: \"Índice Plaquetário\",\n    dataKey: \"PlateletIndex\",\n    color: \"warning\",\n    unit: \"\"\n  }\n};\nconst useReveosMetric = metricType => {\n  _s();\n  var _METRIC_CONFIGS$metri, _METRIC_CONFIGS$metri2;\n  const {\n    getData\n  } = useReveosData();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: ((_METRIC_CONFIGS$metri = METRIC_CONFIGS[metricType]) === null || _METRIC_CONFIGS$metri === void 0 ? void 0 : _METRIC_CONFIGS$metri.label) || \"Métrica\",\n      color: ((_METRIC_CONFIGS$metri2 = METRIC_CONFIGS[metricType]) === null || _METRIC_CONFIGS$metri2 === void 0 ? void 0 : _METRIC_CONFIGS$metri2.color) || \"info\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const data = await getData();\n        const config = METRIC_CONFIGS[metricType];\n        if (!config) {\n          throw new Error(`Tipo de métrica inválido: ${metricType}`);\n        }\n        const dadosOrdenados = data.sort((a, b) => {\n          if (a.Ano !== b.Ano) return a.Ano - b.Ano;\n          return a.Mes - b.Mes;\n        });\n        setChartData({\n          labels: dadosOrdenados.map(item => `${item.Mes}/${item.Ano}`),\n          datasets: [{\n            label: `${config.label} (${config.unit})`.trim(),\n            color: config.color,\n            data: dadosOrdenados.map(item => item[config.dataKey])\n          }]\n        });\n      } catch (error) {\n        var _METRIC_CONFIGS$metri3, _METRIC_CONFIGS$metri4;\n        console.error(\"Erro ao buscar dados:\", error);\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [{\n            label: ((_METRIC_CONFIGS$metri3 = METRIC_CONFIGS[metricType]) === null || _METRIC_CONFIGS$metri3 === void 0 ? void 0 : _METRIC_CONFIGS$metri3.label) || \"Métrica\",\n            color: ((_METRIC_CONFIGS$metri4 = METRIC_CONFIGS[metricType]) === null || _METRIC_CONFIGS$metri4 === void 0 ? void 0 : _METRIC_CONFIGS$metri4.color) || \"info\",\n            data: [0]\n          }]\n        });\n      }\n    };\n    loadData();\n  }, [metricType, getData]);\n  return chartData;\n};\n_s(useReveosMetric, \"9GNngcfLeC1qgcGNtZ4Zr8TuMtI=\", false, function () {\n  return [useReveosData];\n});\nexport default useReveosMetric;","map":{"version":3,"names":["useState","useEffect","useReveosData","METRIC_CONFIGS","plateletVolume","label","dataKey","color","unit","plasmaVolume","leukocyteVolume","plateletIndex","useReveosMetric","metricType","_s","_METRIC_CONFIGS$metri","_METRIC_CONFIGS$metri2","getData","chartData","setChartData","labels","datasets","data","loadData","config","Error","dadosOrdenados","sort","a","b","Ano","Mes","map","item","trim","error","_METRIC_CONFIGS$metri3","_METRIC_CONFIGS$metri4","console"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/reveos/components/data/useReveosMetric.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useReveosData } from \"contexts/ReveosDataContext\";\n\nconst METRIC_CONFIGS = {\n  plateletVolume: {\n    label: \"Volume de Plaquetas\",\n    dataKey: \"PlateletVolume\",\n    color: \"warning\",\n    unit: \"mL\",\n  },\n  plasmaVolume: {\n    label: \"Volume de Plasma\",\n    dataKey: \"PlasmaVolume\",\n    color: \"success\",\n    unit: \"mL\",\n  },\n  leukocyteVolume: {\n    label: \"Volume de Leucócitos\",\n    dataKey: \"LeucocyteVolume\",\n    color: \"secondary\",\n    unit: \"mL\",\n  },\n  plateletIndex: {\n    label: \"Índice Plaquetário\",\n    dataKey: \"PlateletIndex\",\n    color: \"warning\",\n    unit: \"\",\n  },\n};\n\nconst useReveosMetric = (metricType) => {\n  const { getData } = useReveosData();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: METRIC_CONFIGS[metricType]?.label || \"Métrica\",\n        color: METRIC_CONFIGS[metricType]?.color || \"info\",\n        data: [],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const data = await getData();\n        const config = METRIC_CONFIGS[metricType];\n\n        if (!config) {\n          throw new Error(`Tipo de métrica inválido: ${metricType}`);\n        }\n\n        const dadosOrdenados = data.sort((a, b) => {\n          if (a.Ano !== b.Ano) return a.Ano - b.Ano;\n          return a.Mes - b.Mes;\n        });\n\n        setChartData({\n          labels: dadosOrdenados.map((item) => `${item.Mes}/${item.Ano}`),\n          datasets: [\n            {\n              label: `${config.label} (${config.unit})`.trim(),\n              color: config.color,\n              data: dadosOrdenados.map((item) => item[config.dataKey]),\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [\n            {\n              label: METRIC_CONFIGS[metricType]?.label || \"Métrica\",\n              color: METRIC_CONFIGS[metricType]?.color || \"info\",\n              data: [0],\n            },\n          ],\n        });\n      }\n    };\n\n    loadData();\n  }, [metricType, getData]);\n\n  return chartData;\n};\n\nexport default useReveosMetric;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}