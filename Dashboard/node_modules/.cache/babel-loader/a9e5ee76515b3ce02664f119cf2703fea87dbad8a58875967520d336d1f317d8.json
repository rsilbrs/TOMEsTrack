{"ast":null,"code":"var _jsxFileName = \"/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/notifications/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Divider from \"@mui/material/Divider\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\nimport MDInput from \"components/MDInput\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `indicator-tabpanel-${index}`,\n    \"aria-labelledby\": `indicator-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n// Adiciona PropTypes para TabPanel\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n\n// Definição central dos indicadores\n// Estrutura que contém todos os indicadores organizados por categoria\nconst INDICATOR_CONFIG = {\n  dashboard: {\n    id: \"dashboardIndicators\",\n    title: \"Dashboard\",\n    indicators: {\n      doacoesPorAfereses: {\n        id: \"dashboard_doacoesPorAfereses\",\n        label: \"Total de doações por Aféreses\",\n        default: false\n      },\n      doacoesPorSangueTotal: {\n        id: \"dashboard_doacoesPorSangueTotal\",\n        label: \"Total de doações por Sangue Total\",\n        default: false\n      },\n      componentesProduzidos: {\n        id: \"componentesProduzidos\",\n        label: \"Total de Componentes Produzidos\",\n        default: false\n      },\n      produtividade: {\n        id: \"produtividade\",\n        label: \"Produtividade\",\n        default: false\n      }\n    }\n  },\n  trima: {\n    id: \"trimaIndicators\",\n    title: \"Trima\",\n    indicators: {\n      doacoesPorAfereses: {\n        id: \"trima_doacoesPorAfereses\",\n        label: \"Total de doações por Aféreses (Trima)\",\n        default: false\n      },\n      plaquetasOfertadasColetadas: {\n        id: \"plaquetasOfertadasColetadas\",\n        label: \"Total de Plaquetas Oferecidas x Coletadas\",\n        default: false\n      },\n      plaquetasPreDoador: {\n        id: \"plaquetasPreDoador\",\n        label: \"Plaquetas Pré - Doador\",\n        default: false\n      },\n      htHbPreDoador: {\n        id: \"htHbPreDoador\",\n        label: \"Ht/Hb Pré - Doador\",\n        default: false\n      },\n      duracaoProcedimentos: {\n        id: \"duracaoProcedimentos\",\n        label: \"Duração dos procedimentos\",\n        default: false\n      },\n      top10Alarmes: {\n        id: \"top10Alarmes\",\n        label: \"Top 10 Alarmes\",\n        default: false\n      }\n    }\n  },\n  reveos: {\n    id: \"reveosIndicators\",\n    title: \"Reveos\",\n    indicators: {\n      componentesProcessados: {\n        id: \"componentesProcessados\",\n        label: \"Componentes processados\",\n        default: false\n      },\n      duracao: {\n        id: \"duracao\",\n        label: \"Duração\",\n        default: false\n      },\n      volumeMedioPlaquetas: {\n        id: \"volumeMedioPlaquetas\",\n        label: \"Volume Médio Plaquetas\",\n        default: false\n      },\n      pyiPlaquetas: {\n        id: \"pyiPlaquetas\",\n        label: \"PYI Plaquetas\",\n        default: false\n      },\n      volumeMedioPlasma: {\n        id: \"volumeMedioPlasma\",\n        label: \"Volume Médio de Plasma\",\n        default: false\n      },\n      volumeTotalPlasma: {\n        id: \"volumeTotalPlasma\",\n        label: \"Volume Total de Plasma\",\n        default: false\n      },\n      top10Alarmes: {\n        id: \"top10AlarmesReveos\",\n        label: \"Top 10 Alarmes - Reveos\",\n        default: false\n      }\n    }\n  }\n};\n\n// Função auxiliar para inicializar estado de indicadores a partir da configuração\nconst initializeIndicatorsState = categoryConfig => {\n  return Object.keys(categoryConfig.indicators).reduce((acc, key) => {\n    acc[key] = categoryConfig.indicators[key].default;\n    return acc;\n  }, {});\n};\n\n// Helpers para tratamento de notificações\nconst NOTIFICATION_HELPERS = {\n  // Função para verificar se um objeto tem pelo menos um valor verdadeiro\n  hasSelectedItems: obj => Object.values(obj).some(value => value),\n  // Função para contar itens selecionados em múltiplos objetos\n  countSelectedItems: objects => {\n    return objects.reduce((total, obj) => total + Object.values(obj).filter(v => v).length, 0);\n  },\n  // Função para mapear nomes antigos para novos (compatibilidade)\n  getCompatibilityMapping: () => ({\n    // Dashboard\n    totalDonationsAferese: \"doacoesPorAfereses\",\n    totalDoacoesAferese: \"doacoesPorAfereses\",\n    doacoesAferese: \"doacoesPorAfereses\",\n    totalDonationsSangueTotal: \"doacoesPorSangueTotal\",\n    totalDoacoesSangueTotal: \"doacoesPorSangueTotal\",\n    doacoesSangueTotal: \"doacoesPorSangueTotal\",\n    totalComponentesProduzidos: \"componentesProduzidos\",\n    produtividadeGeral: \"produtividade\",\n    produtividadePorUsuario: \"produtividade\",\n    produtividadeUsuario: \"produtividade\",\n    // Trima\n    totalDonations: \"trima_doacoesPorAfereses\",\n    totalDoacoes: \"trima_doacoesPorAfereses\",\n    plateletOfferedVsCollected: \"plaquetasOfertadasColetadas\",\n    totalOfertadoXColetado: \"plaquetasOfertadasColetadas\",\n    plaquetasOfertadasXColetadas: \"plaquetasOfertadasColetadas\",\n    plateletCount: \"plaquetasPreDoador\",\n    hemoglobinLevels: \"htHbPreDoador\",\n    procedureDuration: \"duracaoProcedimentos\",\n    alarmFrequency: \"top10Alarmes\",\n    // Reveos\n    processedComponents: \"componentesProcessados\",\n    totalComponentesProcessados: \"componentesProcessados\",\n    processingTime: \"duracao\",\n    plateletVolume: \"volumeMedioPlaquetas\",\n    plateletYield: \"pyiPlaquetas\",\n    plateletIndex: \"pyiPlaquetas\",\n    plasmaVolume: \"volumeMedioPlasma\",\n    totalPlasmaVolume: \"volumeTotalPlasma\",\n    equipmentAlarms: \"top10AlarmesReveos\"\n  }),\n  // Função genérica para alternar estados\n  toggleIndicator: (setState, state, key) => {\n    setState({\n      ...state,\n      [key]: !state[key]\n    });\n  },\n  // Função genérica para selecionar todos\n  selectAll: (setState, indicators) => {\n    const result = {};\n    Object.keys(indicators).forEach(key => {\n      result[key] = true;\n    });\n    setState(result);\n  },\n  // Função genérica para desmarcar todos\n  deselectAll: (setState, indicators) => {\n    const result = {};\n    Object.keys(indicators).forEach(key => {\n      result[key] = false;\n    });\n    setState(result);\n  }\n};\nfunction Notifications() {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n  const [email, setEmail] = useState(\"\");\n  const [frequency, setFrequency] = useState(\"weekly\");\n\n  // Inicializar estados de indicadores a partir da configuração central\n  const [dashboardIndicators, setDashboardIndicators] = useState(initializeIndicatorsState(INDICATOR_CONFIG.dashboard));\n  const [trimaIndicators, setTrimaIndicators] = useState(initializeIndicatorsState(INDICATOR_CONFIG.trima));\n  const [reveosIndicators, setReveosIndicators] = useState(initializeIndicatorsState(INDICATOR_CONFIG.reveos));\n\n  // Simplificação do gerenciamento de snackbar\n  const showSnackbar = (message, severity = \"success\") => {\n    setSnackbarState({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbarState(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  useEffect(() => {\n    // Verificar se o usuário está autenticado\n    const authToken = localStorage.getItem(\"authToken\");\n    const username = localStorage.getItem(\"userName\");\n    console.log(\"Dados do usuário:\", {\n      authToken: !!authToken,\n      username\n    });\n    if (!authToken || !username) {\n      console.error(\"Usuário não autenticado\");\n      showSnackbar(\"É necessário estar autenticado para configurar notificações\", \"error\");\n      return;\n    }\n\n    // Carregar configurações salvas do arquivo\n    loadNotificationSettings();\n  }, []);\n\n  // Função para migrar configurações antigas para o novo formato (compatibilidade)\n  const migrateOldSettings = oldSettings => {\n    const newDashboard = {};\n    const newTrima = {};\n    const newReveos = {};\n\n    // Mapear Dashboard indicators\n    if (oldSettings.dashboardIndicators) {\n      const oldDashboard = oldSettings.dashboardIndicators;\n      newDashboard.doacoesPorAfereses = oldDashboard.doacoesPorAfereses || oldDashboard.totalDonationsAferese || oldDashboard.totalDoacoesAferese || oldDashboard.doacoesAferese || false;\n      newDashboard.doacoesPorSangueTotal = oldDashboard.doacoesPorSangueTotal || oldDashboard.totalDonationsSangueTotal || oldDashboard.totalDoacoesSangueTotal || oldDashboard.doacoesSangueTotal || false;\n      newDashboard.componentesProduzidos = oldDashboard.componentesProduzidos || oldDashboard.totalComponentesProduzidos || false;\n      newDashboard.produtividade = oldDashboard.produtividade || oldDashboard.produtividadeGeral || oldDashboard.produtividadePorUsuario || oldDashboard.produtividadeUsuario || false;\n    }\n\n    // Mapear Trima indicators\n    if (oldSettings.trimaIndicators) {\n      const oldTrima = oldSettings.trimaIndicators;\n      newTrima.doacoesPorAfereses = oldTrima.doacoesPorAfereses || oldTrima.totalDonations || oldTrima.totalDoacoes || oldTrima.doacoesAferese || false;\n      newTrima.plaquetasOfertadasColetadas = oldTrima.plateletOfferedVsCollected || oldTrima.totalOfertadoXColetado || oldTrima.plaquetasOfertadasXColetadas || oldTrima.plaquetasOfertadasColetadas || false;\n      newTrima.plaquetasPreDoador = oldTrima.plateletCount || oldTrima.plaquetasPreDoador || false;\n      newTrima.htHbPreDoador = oldTrima.hemoglobinLevels || oldTrima.htHbPreDoador || false;\n      newTrima.duracaoProcedimentos = oldTrima.procedureDuration || oldTrima.duracaoProcedimentos || false;\n      newTrima.top10Alarmes = oldTrima.alarmFrequency || oldTrima.top10Alarmes || false;\n    }\n\n    // Mapear Reveos indicators\n    if (oldSettings.reveosIndicators) {\n      const oldReveos = oldSettings.reveosIndicators;\n      newReveos.componentesProcessados = oldReveos.processedComponents || oldReveos.totalComponentesProcessados || oldReveos.componentesProcessados || false;\n      newReveos.duracao = oldReveos.processingTime || oldReveos.duracao || false;\n      newReveos.volumeMedioPlaquetas = oldReveos.plateletVolume || oldReveos.volumeMedioPlaquetas || false;\n      newReveos.pyiPlaquetas = oldReveos.plateletYield || oldReveos.plateletIndex || oldReveos.pyiPlaquetas || false;\n      newReveos.volumeMedioPlasma = oldReveos.plasmaVolume || oldReveos.volumeMedioPlasma || false;\n      newReveos.volumeTotalPlasma = oldReveos.totalPlasmaVolume || oldReveos.volumeTotalPlasma || false;\n      newReveos.top10Alarmes = oldReveos.equipmentAlarms || oldReveos.top10Alarmes || false;\n    }\n    return {\n      dashboardIndicators: newDashboard,\n      trimaIndicators: newTrima,\n      reveosIndicators: newReveos,\n      email: oldSettings.email || \"\",\n      frequency: oldSettings.frequency || \"weekly\",\n      lastUpdated: new Date().toISOString(),\n      userId: oldSettings.userId || localStorage.getItem(\"userId\") || \"guest\"\n    };\n  };\n\n  // Função para carregar as configurações de notificações do arquivo\n  const loadNotificationSettings = async () => {\n    try {\n      console.log(\"Carregando configurações do servidor...\");\n\n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      if (!username) {\n        console.warn(\"Nome de usuário não encontrado no localStorage\");\n        showSnackbar(\"Erro ao carregar configurações: Usuário não identificado\", \"warning\");\n        return;\n      }\n\n      // Carregar do servidor (arquivo persistente)\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/notifications/settings`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        }\n      });\n      if (response.status === 200 && response.data) {\n        // Se encontrou configurações no servidor\n        const oldSettings = response.data;\n        // Migrar configurações antigas para o novo formato\n        const settings = migrateOldSettings(oldSettings);\n        setEmail(settings.email || \"\");\n        setFrequency(settings.frequency || \"weekly\");\n        setDashboardIndicators(settings.dashboardIndicators);\n        setTrimaIndicators(settings.trimaIndicators);\n        setReveosIndicators(settings.reveosIndicators);\n\n        // Atualizar também no localStorage para fallback\n        localStorage.setItem(\"notificationSettings\", JSON.stringify(settings));\n        console.log(\"Configurações carregadas com sucesso do servidor\");\n      } else {\n        // Se não encontrou configurações no servidor\n        console.log(\"Nenhuma configuração encontrada no servidor. Verificando localStorage...\");\n\n        // Verificar se já existem configurações no localStorage como fallback\n        const localSettings = localStorage.getItem(\"notificationSettings\");\n        if (localSettings) {\n          try {\n            const oldSettings = JSON.parse(localSettings);\n            // Migrar configurações antigas para o novo formato\n            const settings = migrateOldSettings(oldSettings);\n            setEmail(settings.email || \"\");\n            setFrequency(settings.frequency || \"weekly\");\n            setDashboardIndicators(settings.dashboardIndicators);\n            setTrimaIndicators(settings.trimaIndicators);\n            setReveosIndicators(settings.reveosIndicators);\n            console.log(\"Configurações carregadas do localStorage\");\n\n            // Salvar as configurações do localStorage no servidor\n            saveToServer(settings);\n          } catch (error) {\n            console.error(\"Erro ao processar configurações locais:\", error);\n            showSnackbar(\"Erro ao carregar configurações salvas localmente\", \"error\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Erro ao carregar configurações do servidor:\", error);\n      showSnackbar(`Erro ao carregar configurações: ${error.message}`, \"error\");\n\n      // Em caso de erro, tenta usar o localStorage como fallback\n      const localSettings = localStorage.getItem(\"notificationSettings\");\n      if (localSettings) {\n        try {\n          const oldSettings = JSON.parse(localSettings);\n          // Migrar configurações antigas para o novo formato\n          const settings = migrateOldSettings(oldSettings);\n          setEmail(settings.email || \"\");\n          setFrequency(settings.frequency || \"weekly\");\n          setDashboardIndicators(settings.dashboardIndicators);\n          setTrimaIndicators(settings.trimaIndicators);\n          setReveosIndicators(settings.reveosIndicators);\n          console.log(\"Usando configurações do localStorage como fallback\");\n        } catch (parseError) {\n          console.error(\"Erro ao processar configurações locais:\", parseError);\n        }\n      }\n    }\n  };\n\n  // Função otimizada para salvar as configurações no servidor\n  const saveToServer = async (notificationData, retryCount = 0) => {\n    try {\n      console.log(\"Salvando configurações no servidor...\");\n\n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      if (!username) {\n        console.warn(\"Nome de usuário não encontrado no localStorage\");\n        showSnackbar(\"Erro ao salvar: Usuário não identificado\", \"warning\");\n        return false;\n      }\n\n      // Adicionar o nome de usuário aos dados\n      const dataToSave = {\n        ...notificationData,\n        username,\n        userId: localStorage.getItem(\"userId\") || \"guest\",\n        lastUpdated: new Date().toISOString()\n      };\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/notifications/settings`, dataToSave, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        timeout: 5000 // Timeout de 5 segundos\n      });\n      if (response.status !== 200 && response.status !== 201) {\n        throw new Error(`Erro ao salvar no servidor: ${response.statusText}`);\n      }\n      console.log(\"Configurações salvas com sucesso no servidor\");\n      return true;\n    } catch (error) {\n      console.error(\"Erro ao salvar configurações no servidor:\", error);\n\n      // Se houver falha de conectividade ou timeout, tentar novamente (até 2 vezes)\n      if (retryCount < 2 && (error.code === \"ECONNABORTED\" || error.message.includes(\"timeout\") || error.message.includes(\"Network Error\"))) {\n        console.log(`Tentando novamente (${retryCount + 1} de 2)...`);\n        return new Promise(resolve => {\n          setTimeout(async () => {\n            const result = await saveToServer(notificationData, retryCount + 1);\n            resolve(result);\n          }, 1000); // Aguardar 1 segundo antes de tentar novamente\n        });\n      }\n      showSnackbar(`Erro ao salvar no servidor: ${error.message}. As configurações foram salvas localmente.`, \"warning\");\n      return false;\n    }\n  };\n\n  // Função para enviar email de teste - versão otimizada\n  const handleTestEmail = async () => {\n    if (!email) {\n      showSnackbar(\"Por favor, informe um email válido\", \"warning\");\n      return;\n    }\n    try {\n      showSnackbar(\"Enviando email de teste...\", \"info\");\n\n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      if (!username) {\n        showSnackbar(\"Erro ao enviar email: Usuário não identificado\", \"warning\");\n        return;\n      }\n\n      // Verificar se há indicadores selecionados\n      const hasSelectedIndicator = [dashboardIndicators, trimaIndicators, reveosIndicators].some(NOTIFICATION_HELPERS.hasSelectedItems);\n\n      // Tentar enviar o email de teste\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/notifications/test-email`, {\n        email,\n        frequency,\n        indicators: hasSelectedIndicator ? {\n          dashboardIndicators,\n          trimaIndicators,\n          reveosIndicators\n        } : null,\n        username\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        timeout: 10000 // 10 segundos de timeout\n      });\n      if (response.status === 200) {\n        showSnackbar(hasSelectedIndicator ? \"Email de teste com dados reais enviado com sucesso! Verifique sua caixa de entrada.\" : \"Email de teste enviado com sucesso! Verifique sua caixa de entrada.\", \"success\");\n      } else {\n        throw new Error(\"Erro ao enviar email de teste\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Erro ao enviar email de teste:\", error);\n\n      // Formatar mensagem de erro mais amigável\n      let errorMessage = \"Falha ao enviar email de teste\";\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.details) {\n        // Se o erro contém detalhes da API\n        errorMessage += `: ${error.response.data.details}`;\n\n        // Adicionar dicas específicas para erros comuns\n        if (error.response.data.details.includes(\"Invalid login\") || error.response.data.details.includes(\"Username and Password not accepted\")) {\n          errorMessage += \". Verifique as configurações de email do servidor (autenticação em dois fatores ou senha de aplicativo)\";\n        }\n      } else if (error.message) {\n        // Erro genérico\n        errorMessage += `: ${error.message}`;\n      }\n      showSnackbar(errorMessage, \"error\");\n    }\n  };\n\n  // Função para navegar entre etapas do formulário\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  // Funções genéricas para manipular indicadores usando o NOTIFICATION_HELPERS\n  const handleDashboardChange = key => NOTIFICATION_HELPERS.toggleIndicator(setDashboardIndicators, dashboardIndicators, key);\n  const handleTrimaChange = key => NOTIFICATION_HELPERS.toggleIndicator(setTrimaIndicators, trimaIndicators, key);\n  const handleReveosChange = key => NOTIFICATION_HELPERS.toggleIndicator(setReveosIndicators, reveosIndicators, key);\n\n  // Funções para selecionar/desselecionar todos os indicadores\n  const selectAllDashboard = () => NOTIFICATION_HELPERS.selectAll(setDashboardIndicators, dashboardIndicators);\n  const selectAllTrima = () => NOTIFICATION_HELPERS.selectAll(setTrimaIndicators, trimaIndicators);\n  const selectAllReveos = () => NOTIFICATION_HELPERS.selectAll(setReveosIndicators, reveosIndicators);\n  const deselectAllDashboard = () => NOTIFICATION_HELPERS.deselectAll(setDashboardIndicators, dashboardIndicators);\n  const deselectAllTrima = () => NOTIFICATION_HELPERS.deselectAll(setTrimaIndicators, trimaIndicators);\n  const deselectAllReveos = () => NOTIFICATION_HELPERS.deselectAll(setReveosIndicators, reveosIndicators);\n\n  // Função para obter rótulo de indicador\n  const getIndicatorLabel = (category, key) => {\n    try {\n      return INDICATOR_CONFIG[category].indicators[key].label;\n    } catch (error) {\n      console.warn(`Indicador não encontrado: ${category}.${key}`);\n      return key; // Fallback para o nome da chave\n    }\n  };\n\n  // Função para contar indicadores selecionados\n  const countSelectedIndicators = () => NOTIFICATION_HELPERS.countSelectedItems([dashboardIndicators, trimaIndicators, reveosIndicators]);\n\n  // Função otimizada para salvar as configurações\n  const handleSave = async () => {\n    try {\n      // Verificar se pelo menos um indicador foi selecionado\n      const hasSelectedIndicator = [dashboardIndicators, trimaIndicators, reveosIndicators].some(NOTIFICATION_HELPERS.hasSelectedItems);\n      if (!hasSelectedIndicator) {\n        showSnackbar(\"Selecione pelo menos um indicador para continuar\", \"warning\");\n        return;\n      }\n      if (!email) {\n        showSnackbar(\"Por favor, informe um email válido\", \"warning\");\n        return;\n      }\n\n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      if (!username) {\n        showSnackbar(\"Erro ao salvar: Usuário não identificado\", \"warning\");\n        return;\n      }\n\n      // Mostrar indicador de carregamento para o usuário\n      showSnackbar(\"Salvando configurações...\", \"info\");\n      const notificationData = {\n        email,\n        frequency,\n        dashboardIndicators,\n        trimaIndicators,\n        reveosIndicators,\n        lastUpdated: new Date().toISOString(),\n        userId: localStorage.getItem(\"userId\") || \"guest\",\n        username\n      };\n\n      // Salvar no localStorage como fallback\n      localStorage.setItem(\"notificationSettings\", JSON.stringify(notificationData));\n      console.log(\"Configurações salvas localmente no localStorage\");\n\n      // Salvar no servidor (arquivo persistente)\n      const serverSaved = await saveToServer(notificationData);\n\n      // Feedback visual para o usuário\n      if (serverSaved) {\n        showSnackbar(\"Configurações salvas com sucesso!\");\n      } else {\n        // Verificar conexão com o servidor\n        try {\n          await axios.get(`${process.env.REACT_APP_API_URL}/api/health`, {\n            timeout: 3000\n          });\n          // Se conseguir conectar ao servidor mas falhou ao salvar\n          showSnackbar(\"Configurações salvas localmente, mas houve um problema específico ao salvar no servidor. Tente novamente mais tarde.\", \"warning\");\n        } catch (connectionError) {\n          // Se não conseguir conectar ao servidor\n          showSnackbar(\"Configurações salvas localmente. Não foi possível conectar ao servidor. Verifique sua conexão.\", \"warning\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Erro ao salvar configurações:\", error);\n      showSnackbar(\"Erro ao salvar configurações. Por favor, tente novamente.\", \"error\");\n    }\n  };\n  const steps = [\"Selecionar Indicadores\", \"Configurar Email\", \"Revisar e Salvar\"];\n  const renderIndicatorSelection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Selecione os indicadores para receber notifica\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      mb: 2,\n      children: \"Selecione os indicadores que deseja monitorar atrav\\xE9s de notifica\\xE7\\xF5es por email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: selectedTab,\n      onChange: handleTabChange,\n      variant: \"fullWidth\",\n      sx: {\n        mb: 2,\n        borderBottom: 1,\n        borderColor: \"divider\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: INDICATOR_CONFIG.dashboard.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: INDICATOR_CONFIG.trima.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: INDICATOR_CONFIG.reveos.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: selectedTab,\n      index: 0,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"subtitle1\",\n          children: [\"Indicadores do Dashboard (\", Object.values(dashboardIndicators).filter(v => v).length, \"/\", Object.keys(dashboardIndicators).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: selectAllDashboard,\n            sx: {\n              mr: 1\n            },\n            children: \"Selecionar Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: deselectAllDashboard,\n            children: \"Limpar Sele\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: Object.entries(dashboardIndicators).map(([key, value]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: value,\n              onChange: () => handleDashboardChange(key),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 19\n            }, this),\n            label: getIndicatorLabel(\"dashboard\", key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: selectedTab,\n      index: 1,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"subtitle1\",\n          children: [\"Indicadores Trima (\", Object.values(trimaIndicators).filter(v => v).length, \"/\", Object.keys(trimaIndicators).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: selectAllTrima,\n            sx: {\n              mr: 1\n            },\n            children: \"Selecionar Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: deselectAllTrima,\n            children: \"Limpar Sele\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: Object.entries(trimaIndicators).map(([key, value]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: value,\n              onChange: () => handleTrimaChange(key),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 19\n            }, this),\n            label: getIndicatorLabel(\"trima\", key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: selectedTab,\n      index: 2,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"subtitle1\",\n          children: [\"Indicadores Reveos (\", Object.values(reveosIndicators).filter(v => v).length, \"/\", Object.keys(reveosIndicators).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: selectAllReveos,\n            sx: {\n              mr: 1\n            },\n            children: \"Selecionar Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: deselectAllReveos,\n            children: \"Limpar Sele\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: Object.entries(reveosIndicators).map(([key, value]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: value,\n              onChange: () => handleReveosChange(key),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 19\n            }, this),\n            label: getIndicatorLabel(\"reveos\", key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderEmailConfiguration = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Configura\\xE7\\xE3o de Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      mb: 3,\n      children: \"Informe o email onde deseja receber as notifica\\xE7\\xF5es e a frequ\\xEAncia desejada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(MDInput, {\n          type: \"email\",\n          label: \"Email para notifica\\xE7\\xF5es\",\n          fullWidth: true,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"seu.email@exemplo.com\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          mt: 1,\n          children: /*#__PURE__*/_jsxDEV(MDButton, {\n            variant: \"outlined\",\n            color: \"info\",\n            onClick: handleTestEmail,\n            disabled: !email,\n            size: \"small\",\n            children: \"Enviar Email de Teste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(MDInput, {\n          select: true,\n          label: \"Frequ\\xEAncia de envio\",\n          value: frequency,\n          onChange: e => setFrequency(e.target.value),\n          fullWidth: true,\n          sx: {\n            \"& .MuiSelect-select\": {\n              padding: \"0.75rem\",\n              minHeight: \"1.4375em\",\n              height: \"1.4375em\",\n              display: \"flex\",\n              alignItems: \"center\"\n            },\n            \"& .MuiInputBase-input\": {\n              height: \"1.4375em\"\n            },\n            \"& .MuiOutlinedInput-root\": {\n              paddingTop: \"0.75rem\",\n              paddingBottom: \"0.75rem\"\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"daily\",\n            children: \"Di\\xE1ria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"weekly\",\n            children: \"Semanal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"monthly\",\n            children: \"Mensal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          sx: {\n            p: 2,\n            mt: 2,\n            backgroundColor: \"#f8f9fa\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            color: \"info\",\n            children: \"Informa\\xE7\\xF5es sobre a frequ\\xEAncia de envio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            component: \"ul\",\n            sx: {\n              pl: 2,\n              mt: 1,\n              mb: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Di\\xE1ria:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 19\n                }, this), \" Emails ser\\xE3o enviados todos os dias \\xE0s 7h da manh\\xE3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Semanal:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 975,\n                  columnNumber: 19\n                }, this), \" Emails ser\\xE3o enviados todas as segundas-feiras \\xE0s 7h da manh\\xE3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Mensal:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 19\n                }, this), \" Emails ser\\xE3o enviados no primeiro dia de cada m\\xEAs \\xE0s 7h da manh\\xE3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  // Função para verificar se um objeto tem pelo menos um valor verdadeiro\n  const hasSelectedItems = obj => Object.values(obj).some(value => value);\n  const renderSummary = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Resumo das Configura\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      variant: \"outlined\",\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"body2\",\n            mb: 2,\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            children: \"Frequ\\xEAncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"body2\",\n            mb: 2,\n            children: frequency === \"daily\" ? \"Diária\" : frequency === \"weekly\" ? \"Semanal\" : \"Mensal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            children: \"Total de indicadores selecionados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"body2\",\n            children: countSelectedIndicators()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Indicadores por categoria:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            component: \"ul\",\n            sx: {\n              pl: 2,\n              mt: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                children: [\"Dashboard: \", Object.values(dashboardIndicators).filter(v => v).length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                children: [\"Trima: \", Object.values(trimaIndicators).filter(v => v).length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                children: [\"Reveos: \", Object.values(reveosIndicators).filter(v => v).length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 39\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"subtitle2\",\n          children: \"Ver indicadores selecionados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: [hasSelectedItems(dashboardIndicators) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Dashboard:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"ul\",\n            sx: {\n              pl: 2,\n              mt: 0\n            },\n            children: Object.entries(dashboardIndicators).filter(([_, value]) => value).map(([key]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                children: getIndicatorLabel(\"dashboard\", key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 23\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), hasSelectedItems(trimaIndicators) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            sx: {\n              mt: 2\n            },\n            children: \"Trima:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"ul\",\n            sx: {\n              pl: 2,\n              mt: 0\n            },\n            children: Object.entries(trimaIndicators).filter(([_, value]) => value).map(([key]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                children: getIndicatorLabel(\"trima\", key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 23\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), hasSelectedItems(reveosIndicators) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            sx: {\n              mt: 2\n            },\n            children: \"Reveos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"ul\",\n            sx: {\n              pl: 2,\n              mt: 0\n            },\n            children: Object.entries(reveosIndicators).filter(([_, value]) => value).map(([key]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"body2\",\n                children: getIndicatorLabel(\"reveos\", key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 23\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), !hasSelectedItems(dashboardIndicators) && !hasSelectedItems(trimaIndicators) && !hasSelectedItems(reveosIndicators) && /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            fontStyle: \"italic\"\n          },\n          children: \"Nenhum indicador selecionado.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return renderIndicatorSelection();\n      case 1:\n        return renderEmailConfiguration();\n      case 2:\n        return renderSummary();\n      default:\n        return \"Passo desconhecido\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          xl: 10,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(MDBox, {\n              p: 3,\n              children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n                variant: \"h4\",\n                mb: 3,\n                children: \"Configura\\xE7\\xE3o de Notifica\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n                activeStep: activeStep,\n                alternativeLabel: true,\n                sx: {\n                  mb: 4\n                },\n                children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n                  children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1147,\n                    columnNumber: 23\n                  }, this)\n                }, label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1144,\n                columnNumber: 17\n              }, this), getStepContent(activeStep), /*#__PURE__*/_jsxDEV(MDBox, {\n                mt: 4,\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disabled: activeStep === 0,\n                  onClick: handleBack,\n                  children: \"Voltar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 19\n                }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(MDButton, {\n                  variant: \"gradient\",\n                  color: \"info\",\n                  onClick: handleSave,\n                  children: \"Salvar Configura\\xE7\\xF5es\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1160,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(MDButton, {\n                  variant: \"contained\",\n                  color: \"info\",\n                  onClick: handleNext,\n                  children: \"Pr\\xF3ximo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarState.open,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbarState.severity,\n        variant: \"filled\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbarState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1133,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"I7fNxSg0RekrG45ave0IrnMhPwQ=\");\n_c2 = Notifications;\nexport default Notifications;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Notifications\");","map":{"version":3,"names":["useState","useEffect","PropTypes","axios","Grid","Card","MenuItem","FormControlLabel","Checkbox","Divider","Tabs","Tab","Box","Button","Stepper","Step","StepLabel","Typography","Paper","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","Snackbar","Alert","MDBox","MDTypography","MDButton","MDInput","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","number","INDICATOR_CONFIG","dashboard","title","indicators","doacoesPorAfereses","label","default","doacoesPorSangueTotal","componentesProduzidos","produtividade","trima","plaquetasOfertadasColetadas","plaquetasPreDoador","htHbPreDoador","duracaoProcedimentos","top10Alarmes","reveos","componentesProcessados","duracao","volumeMedioPlaquetas","pyiPlaquetas","volumeMedioPlasma","volumeTotalPlasma","initializeIndicatorsState","categoryConfig","Object","keys","reduce","acc","key","NOTIFICATION_HELPERS","hasSelectedItems","obj","values","some","countSelectedItems","objects","total","filter","v","length","getCompatibilityMapping","totalDonationsAferese","totalDoacoesAferese","doacoesAferese","totalDonationsSangueTotal","totalDoacoesSangueTotal","doacoesSangueTotal","totalComponentesProduzidos","produtividadeGeral","produtividadePorUsuario","produtividadeUsuario","totalDonations","totalDoacoes","plateletOfferedVsCollected","totalOfertadoXColetado","plaquetasOfertadasXColetadas","plateletCount","hemoglobinLevels","procedureDuration","alarmFrequency","processedComponents","totalComponentesProcessados","processingTime","plateletVolume","plateletYield","plateletIndex","plasmaVolume","totalPlasmaVolume","equipmentAlarms","toggleIndicator","setState","state","selectAll","result","forEach","deselectAll","Notifications","_s","activeStep","setActiveStep","selectedTab","setSelectedTab","snackbarState","setSnackbarState","open","message","severity","email","setEmail","frequency","setFrequency","dashboardIndicators","setDashboardIndicators","trimaIndicators","setTrimaIndicators","reveosIndicators","setReveosIndicators","showSnackbar","handleCloseSnackbar","prev","authToken","localStorage","getItem","username","console","log","error","loadNotificationSettings","migrateOldSettings","oldSettings","newDashboard","newTrima","newReveos","oldDashboard","oldTrima","oldReveos","lastUpdated","Date","toISOString","userId","warn","response","get","process","env","REACT_APP_API_URL","headers","Authorization","status","data","settings","setItem","JSON","stringify","localSettings","parse","saveToServer","parseError","notificationData","retryCount","dataToSave","post","timeout","Error","statusText","code","includes","Promise","resolve","setTimeout","handleTestEmail","hasSelectedIndicator","_error$response","_error$response$data","errorMessage","details","handleTabChange","event","newValue","handleNext","prevActiveStep","handleBack","handleDashboardChange","handleTrimaChange","handleReveosChange","selectAllDashboard","selectAllTrima","selectAllReveos","deselectAllDashboard","deselectAllTrima","deselectAllReveos","getIndicatorLabel","category","countSelectedIndicators","handleSave","serverSaved","connectionError","steps","renderIndicatorSelection","variant","gutterBottom","color","mb","onChange","borderBottom","borderColor","display","justifyContent","size","onClick","mr","container","spacing","entries","map","item","xs","sm","md","control","checked","renderEmailConfiguration","type","fullWidth","e","target","placeholder","required","mt","disabled","select","padding","minHeight","height","alignItems","paddingTop","paddingBottom","backgroundColor","component","pl","renderSummary","elevation","expandIcon","_","fontStyle","getStepContent","step","py","xl","alternativeLabel","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c2","$RefreshReg$"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/notifications/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Divider from \"@mui/material/Divider\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\nimport MDInput from \"components/MDInput\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`indicator-tabpanel-${index}`}\n      aria-labelledby={`indicator-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\n// Adiciona PropTypes para TabPanel\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\n// Definição central dos indicadores\n// Estrutura que contém todos os indicadores organizados por categoria\nconst INDICATOR_CONFIG = {\n  dashboard: {\n    id: \"dashboardIndicators\",\n    title: \"Dashboard\",\n    indicators: {\n      doacoesPorAfereses: {\n        id: \"dashboard_doacoesPorAfereses\",\n        label: \"Total de doações por Aféreses\",\n        default: false,\n      },\n      doacoesPorSangueTotal: {\n        id: \"dashboard_doacoesPorSangueTotal\",\n        label: \"Total de doações por Sangue Total\",\n        default: false,\n      },\n      componentesProduzidos: {\n        id: \"componentesProduzidos\",\n        label: \"Total de Componentes Produzidos\",\n        default: false,\n      },\n      produtividade: {\n        id: \"produtividade\",\n        label: \"Produtividade\",\n        default: false,\n      },\n    },\n  },\n  trima: {\n    id: \"trimaIndicators\",\n    title: \"Trima\",\n    indicators: {\n      doacoesPorAfereses: {\n        id: \"trima_doacoesPorAfereses\",\n        label: \"Total de doações por Aféreses (Trima)\",\n        default: false,\n      },\n      plaquetasOfertadasColetadas: {\n        id: \"plaquetasOfertadasColetadas\",\n        label: \"Total de Plaquetas Oferecidas x Coletadas\",\n        default: false,\n      },\n      plaquetasPreDoador: {\n        id: \"plaquetasPreDoador\",\n        label: \"Plaquetas Pré - Doador\",\n        default: false,\n      },\n      htHbPreDoador: {\n        id: \"htHbPreDoador\",\n        label: \"Ht/Hb Pré - Doador\",\n        default: false,\n      },\n      duracaoProcedimentos: {\n        id: \"duracaoProcedimentos\",\n        label: \"Duração dos procedimentos\",\n        default: false,\n      },\n      top10Alarmes: {\n        id: \"top10Alarmes\",\n        label: \"Top 10 Alarmes\",\n        default: false,\n      },\n    },\n  },\n  reveos: {\n    id: \"reveosIndicators\",\n    title: \"Reveos\",\n    indicators: {\n      componentesProcessados: {\n        id: \"componentesProcessados\",\n        label: \"Componentes processados\",\n        default: false,\n      },\n      duracao: {\n        id: \"duracao\",\n        label: \"Duração\",\n        default: false,\n      },\n      volumeMedioPlaquetas: {\n        id: \"volumeMedioPlaquetas\",\n        label: \"Volume Médio Plaquetas\",\n        default: false,\n      },\n      pyiPlaquetas: {\n        id: \"pyiPlaquetas\",\n        label: \"PYI Plaquetas\",\n        default: false,\n      },\n      volumeMedioPlasma: {\n        id: \"volumeMedioPlasma\",\n        label: \"Volume Médio de Plasma\",\n        default: false,\n      },\n      volumeTotalPlasma: {\n        id: \"volumeTotalPlasma\",\n        label: \"Volume Total de Plasma\",\n        default: false,\n      },\n      top10Alarmes: {\n        id: \"top10AlarmesReveos\",\n        label: \"Top 10 Alarmes - Reveos\",\n        default: false,\n      },\n    },\n  },\n};\n\n// Função auxiliar para inicializar estado de indicadores a partir da configuração\nconst initializeIndicatorsState = (categoryConfig) => {\n  return Object.keys(categoryConfig.indicators).reduce((acc, key) => {\n    acc[key] = categoryConfig.indicators[key].default;\n    return acc;\n  }, {});\n};\n\n// Helpers para tratamento de notificações\nconst NOTIFICATION_HELPERS = {\n  // Função para verificar se um objeto tem pelo menos um valor verdadeiro\n  hasSelectedItems: (obj) => Object.values(obj).some((value) => value),\n  \n  // Função para contar itens selecionados em múltiplos objetos\n  countSelectedItems: (objects) => {\n    return objects.reduce((total, obj) => \n      total + Object.values(obj).filter(v => v).length, 0);\n  },\n  \n  // Função para mapear nomes antigos para novos (compatibilidade)\n  getCompatibilityMapping: () => ({\n    // Dashboard\n    totalDonationsAferese: \"doacoesPorAfereses\",\n    totalDoacoesAferese: \"doacoesPorAfereses\",\n    doacoesAferese: \"doacoesPorAfereses\",\n    totalDonationsSangueTotal: \"doacoesPorSangueTotal\",\n    totalDoacoesSangueTotal: \"doacoesPorSangueTotal\",\n    doacoesSangueTotal: \"doacoesPorSangueTotal\",\n    totalComponentesProduzidos: \"componentesProduzidos\",\n    produtividadeGeral: \"produtividade\",\n    produtividadePorUsuario: \"produtividade\",\n    produtividadeUsuario: \"produtividade\",\n    \n    // Trima\n    totalDonations: \"trima_doacoesPorAfereses\",\n    totalDoacoes: \"trima_doacoesPorAfereses\",\n    plateletOfferedVsCollected: \"plaquetasOfertadasColetadas\",\n    totalOfertadoXColetado: \"plaquetasOfertadasColetadas\",\n    plaquetasOfertadasXColetadas: \"plaquetasOfertadasColetadas\",\n    plateletCount: \"plaquetasPreDoador\",\n    hemoglobinLevels: \"htHbPreDoador\",\n    procedureDuration: \"duracaoProcedimentos\",\n    alarmFrequency: \"top10Alarmes\",\n    \n    // Reveos\n    processedComponents: \"componentesProcessados\",\n    totalComponentesProcessados: \"componentesProcessados\",\n    processingTime: \"duracao\",\n    plateletVolume: \"volumeMedioPlaquetas\",\n    plateletYield: \"pyiPlaquetas\",\n    plateletIndex: \"pyiPlaquetas\",\n    plasmaVolume: \"volumeMedioPlasma\",\n    totalPlasmaVolume: \"volumeTotalPlasma\",\n    equipmentAlarms: \"top10AlarmesReveos\"\n  }),\n  \n  // Função genérica para alternar estados\n  toggleIndicator: (setState, state, key) => {\n    setState({ ...state, [key]: !state[key] });\n  },\n  \n  // Função genérica para selecionar todos\n  selectAll: (setState, indicators) => {\n    const result = {};\n    Object.keys(indicators).forEach(key => {\n      result[key] = true;\n    });\n    setState(result);\n  },\n  \n  // Função genérica para desmarcar todos\n  deselectAll: (setState, indicators) => {\n    const result = {};\n    Object.keys(indicators).forEach(key => {\n      result[key] = false;\n    });\n    setState(result);\n  }\n};\n\nfunction Notifications() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n\n  const [email, setEmail] = useState(\"\");\n  const [frequency, setFrequency] = useState(\"weekly\");\n\n  // Inicializar estados de indicadores a partir da configuração central\n  const [dashboardIndicators, setDashboardIndicators] = useState(\n    initializeIndicatorsState(INDICATOR_CONFIG.dashboard)\n  );\n  const [trimaIndicators, setTrimaIndicators] = useState(\n    initializeIndicatorsState(INDICATOR_CONFIG.trima)\n  );\n  const [reveosIndicators, setReveosIndicators] = useState(\n    initializeIndicatorsState(INDICATOR_CONFIG.reveos)\n  );\n\n  // Simplificação do gerenciamento de snackbar\n  const showSnackbar = (message, severity = \"success\") => {\n    setSnackbarState({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbarState(prev => ({ ...prev, open: false }));\n  };\n\n  useEffect(() => {\n    // Verificar se o usuário está autenticado\n    const authToken = localStorage.getItem(\"authToken\");\n    const username = localStorage.getItem(\"userName\");\n    \n    console.log(\"Dados do usuário:\", { authToken: !!authToken, username });\n    \n    if (!authToken || !username) {\n      console.error(\"Usuário não autenticado\");\n      showSnackbar(\"É necessário estar autenticado para configurar notificações\", \"error\");\n      return;\n    }\n    \n    // Carregar configurações salvas do arquivo\n    loadNotificationSettings();\n  }, []);\n\n  // Função para migrar configurações antigas para o novo formato (compatibilidade)\n  const migrateOldSettings = (oldSettings) => {\n    const newDashboard = {};\n    const newTrima = {};\n    const newReveos = {};\n\n    // Mapear Dashboard indicators\n    if (oldSettings.dashboardIndicators) {\n      const oldDashboard = oldSettings.dashboardIndicators;\n      newDashboard.doacoesPorAfereses =\n        oldDashboard.doacoesPorAfereses ||\n        oldDashboard.totalDonationsAferese ||\n        oldDashboard.totalDoacoesAferese ||\n        oldDashboard.doacoesAferese ||\n        false;\n      newDashboard.doacoesPorSangueTotal =\n        oldDashboard.doacoesPorSangueTotal ||\n        oldDashboard.totalDonationsSangueTotal ||\n        oldDashboard.totalDoacoesSangueTotal ||\n        oldDashboard.doacoesSangueTotal ||\n        false;\n      newDashboard.componentesProduzidos =\n        oldDashboard.componentesProduzidos || oldDashboard.totalComponentesProduzidos || false;\n      newDashboard.produtividade =\n        oldDashboard.produtividade ||\n        oldDashboard.produtividadeGeral ||\n        oldDashboard.produtividadePorUsuario ||\n        oldDashboard.produtividadeUsuario ||\n        false;\n    }\n\n    // Mapear Trima indicators\n    if (oldSettings.trimaIndicators) {\n      const oldTrima = oldSettings.trimaIndicators;\n      newTrima.doacoesPorAfereses =\n        oldTrima.doacoesPorAfereses ||\n        oldTrima.totalDonations ||\n        oldTrima.totalDoacoes ||\n        oldTrima.doacoesAferese ||\n        false;\n      newTrima.plaquetasOfertadasColetadas =\n        oldTrima.plateletOfferedVsCollected ||\n        oldTrima.totalOfertadoXColetado ||\n        oldTrima.plaquetasOfertadasXColetadas ||\n        oldTrima.plaquetasOfertadasColetadas ||\n        false;\n      newTrima.plaquetasPreDoador = oldTrima.plateletCount || oldTrima.plaquetasPreDoador || false;\n      newTrima.htHbPreDoador = oldTrima.hemoglobinLevels || oldTrima.htHbPreDoador || false;\n      newTrima.duracaoProcedimentos =\n        oldTrima.procedureDuration || oldTrima.duracaoProcedimentos || false;\n      newTrima.top10Alarmes = oldTrima.alarmFrequency || oldTrima.top10Alarmes || false;\n    }\n\n    // Mapear Reveos indicators\n    if (oldSettings.reveosIndicators) {\n      const oldReveos = oldSettings.reveosIndicators;\n      newReveos.componentesProcessados =\n        oldReveos.processedComponents ||\n        oldReveos.totalComponentesProcessados ||\n        oldReveos.componentesProcessados ||\n        false;\n      newReveos.duracao = oldReveos.processingTime || oldReveos.duracao || false;\n      newReveos.volumeMedioPlaquetas =\n        oldReveos.plateletVolume || oldReveos.volumeMedioPlaquetas || false;\n      newReveos.pyiPlaquetas =\n        oldReveos.plateletYield || oldReveos.plateletIndex || oldReveos.pyiPlaquetas || false;\n      newReveos.volumeMedioPlasma = oldReveos.plasmaVolume || oldReveos.volumeMedioPlasma || false;\n      newReveos.volumeTotalPlasma =\n        oldReveos.totalPlasmaVolume || oldReveos.volumeTotalPlasma || false;\n      newReveos.top10Alarmes = oldReveos.equipmentAlarms || oldReveos.top10Alarmes || false;\n    }\n\n    return {\n      dashboardIndicators: newDashboard,\n      trimaIndicators: newTrima,\n      reveosIndicators: newReveos,\n      email: oldSettings.email || \"\",\n      frequency: oldSettings.frequency || \"weekly\",\n      lastUpdated: new Date().toISOString(),\n      userId: oldSettings.userId || localStorage.getItem(\"userId\") || \"guest\",\n    };\n  };\n\n  // Função para carregar as configurações de notificações do arquivo\n  const loadNotificationSettings = async () => {\n    try {\n      console.log(\"Carregando configurações do servidor...\");\n      \n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      \n      if (!username) {\n        console.warn(\"Nome de usuário não encontrado no localStorage\");\n        showSnackbar(\"Erro ao carregar configurações: Usuário não identificado\", \"warning\");\n        return;\n      }\n      \n      // Carregar do servidor (arquivo persistente)\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/notifications/settings`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n          },\n        }\n      );\n\n      if (response.status === 200 && response.data) {\n        // Se encontrou configurações no servidor\n        const oldSettings = response.data;\n        // Migrar configurações antigas para o novo formato\n        const settings = migrateOldSettings(oldSettings);\n\n        setEmail(settings.email || \"\");\n        setFrequency(settings.frequency || \"weekly\");\n        setDashboardIndicators(settings.dashboardIndicators);\n        setTrimaIndicators(settings.trimaIndicators);\n        setReveosIndicators(settings.reveosIndicators);\n\n        // Atualizar também no localStorage para fallback\n        localStorage.setItem(\"notificationSettings\", JSON.stringify(settings));\n        \n        console.log(\"Configurações carregadas com sucesso do servidor\");\n      } else {\n        // Se não encontrou configurações no servidor\n        console.log(\"Nenhuma configuração encontrada no servidor. Verificando localStorage...\");\n        \n        // Verificar se já existem configurações no localStorage como fallback\n        const localSettings = localStorage.getItem(\"notificationSettings\");\n        \n        if (localSettings) {\n          try {\n            const oldSettings = JSON.parse(localSettings);\n            // Migrar configurações antigas para o novo formato\n            const settings = migrateOldSettings(oldSettings);\n\n            setEmail(settings.email || \"\");\n            setFrequency(settings.frequency || \"weekly\");\n            setDashboardIndicators(settings.dashboardIndicators);\n            setTrimaIndicators(settings.trimaIndicators);\n            setReveosIndicators(settings.reveosIndicators);\n\n            console.log(\"Configurações carregadas do localStorage\");\n            \n            // Salvar as configurações do localStorage no servidor\n            saveToServer(settings);\n          } catch (error) {\n            console.error(\"Erro ao processar configurações locais:\", error);\n            showSnackbar(\"Erro ao carregar configurações salvas localmente\", \"error\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Erro ao carregar configurações do servidor:\", error);\n      showSnackbar(`Erro ao carregar configurações: ${error.message}`, \"error\");\n\n      // Em caso de erro, tenta usar o localStorage como fallback\n      const localSettings = localStorage.getItem(\"notificationSettings\");\n      if (localSettings) {\n        try {\n          const oldSettings = JSON.parse(localSettings);\n          // Migrar configurações antigas para o novo formato\n          const settings = migrateOldSettings(oldSettings);\n\n          setEmail(settings.email || \"\");\n          setFrequency(settings.frequency || \"weekly\");\n          setDashboardIndicators(settings.dashboardIndicators);\n          setTrimaIndicators(settings.trimaIndicators);\n          setReveosIndicators(settings.reveosIndicators);\n          \n          console.log(\"Usando configurações do localStorage como fallback\");\n        } catch (parseError) {\n          console.error(\"Erro ao processar configurações locais:\", parseError);\n        }\n      }\n    }\n  };\n\n  // Função otimizada para salvar as configurações no servidor\n  const saveToServer = async (notificationData, retryCount = 0) => {\n    try {\n      console.log(\"Salvando configurações no servidor...\");\n      \n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      \n      if (!username) {\n        console.warn(\"Nome de usuário não encontrado no localStorage\");\n        showSnackbar(\"Erro ao salvar: Usuário não identificado\", \"warning\");\n        return false;\n      }\n      \n      // Adicionar o nome de usuário aos dados\n      const dataToSave = {\n        ...notificationData,\n        username,\n        userId: localStorage.getItem(\"userId\") || \"guest\",\n        lastUpdated: new Date().toISOString(),\n      };\n      \n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/notifications/settings`,\n        dataToSave,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n          },\n          timeout: 5000, // Timeout de 5 segundos\n        }\n      );\n\n      if (response.status !== 200 && response.status !== 201) {\n        throw new Error(`Erro ao salvar no servidor: ${response.statusText}`);\n      }\n\n      console.log(\"Configurações salvas com sucesso no servidor\");\n      return true;\n    } catch (error) {\n      console.error(\"Erro ao salvar configurações no servidor:\", error);\n\n      // Se houver falha de conectividade ou timeout, tentar novamente (até 2 vezes)\n      if (\n        retryCount < 2 &&\n        (error.code === \"ECONNABORTED\" ||\n          error.message.includes(\"timeout\") ||\n          error.message.includes(\"Network Error\"))\n      ) {\n        console.log(`Tentando novamente (${retryCount + 1} de 2)...`);\n        return new Promise((resolve) => {\n          setTimeout(async () => {\n            const result = await saveToServer(notificationData, retryCount + 1);\n            resolve(result);\n          }, 1000); // Aguardar 1 segundo antes de tentar novamente\n        });\n      }\n\n      showSnackbar(\n        `Erro ao salvar no servidor: ${error.message}. As configurações foram salvas localmente.`,\n        \"warning\"\n      );\n      return false;\n    }\n  };\n\n  // Função para enviar email de teste - versão otimizada\n  const handleTestEmail = async () => {\n    if (!email) {\n      showSnackbar(\"Por favor, informe um email válido\", \"warning\");\n      return;\n    }\n\n    try {\n      showSnackbar(\"Enviando email de teste...\", \"info\");\n\n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      \n      if (!username) {\n        showSnackbar(\"Erro ao enviar email: Usuário não identificado\", \"warning\");\n        return;\n      }\n\n      // Verificar se há indicadores selecionados\n      const hasSelectedIndicator = [\n        dashboardIndicators, \n        trimaIndicators, \n        reveosIndicators\n      ].some(NOTIFICATION_HELPERS.hasSelectedItems);\n\n      // Tentar enviar o email de teste\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/notifications/test-email`,\n        {\n          email,\n          frequency,\n          indicators: hasSelectedIndicator ? {\n            dashboardIndicators,\n            trimaIndicators,\n            reveosIndicators\n          } : null,\n          username,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n          },\n          timeout: 10000, // 10 segundos de timeout\n        }\n      );\n\n      if (response.status === 200) {\n        showSnackbar(\n          hasSelectedIndicator\n            ? \"Email de teste com dados reais enviado com sucesso! Verifique sua caixa de entrada.\"\n            : \"Email de teste enviado com sucesso! Verifique sua caixa de entrada.\",\n          \"success\"\n        );\n      } else {\n        throw new Error(\"Erro ao enviar email de teste\");\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar email de teste:\", error);\n\n      // Formatar mensagem de erro mais amigável\n      let errorMessage = \"Falha ao enviar email de teste\";\n\n      if (error.response?.data?.details) {\n        // Se o erro contém detalhes da API\n        errorMessage += `: ${error.response.data.details}`;\n\n        // Adicionar dicas específicas para erros comuns\n        if (\n          error.response.data.details.includes(\"Invalid login\") ||\n          error.response.data.details.includes(\"Username and Password not accepted\")\n        ) {\n          errorMessage +=\n            \". Verifique as configurações de email do servidor (autenticação em dois fatores ou senha de aplicativo)\";\n        }\n      } else if (error.message) {\n        // Erro genérico\n        errorMessage += `: ${error.message}`;\n      }\n\n      showSnackbar(errorMessage, \"error\");\n    }\n  };\n\n  // Função para navegar entre etapas do formulário\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  // Funções genéricas para manipular indicadores usando o NOTIFICATION_HELPERS\n  const handleDashboardChange = (key) => \n    NOTIFICATION_HELPERS.toggleIndicator(setDashboardIndicators, dashboardIndicators, key);\n    \n  const handleTrimaChange = (key) => \n    NOTIFICATION_HELPERS.toggleIndicator(setTrimaIndicators, trimaIndicators, key);\n    \n  const handleReveosChange = (key) => \n    NOTIFICATION_HELPERS.toggleIndicator(setReveosIndicators, reveosIndicators, key);\n\n  // Funções para selecionar/desselecionar todos os indicadores\n  const selectAllDashboard = () => \n    NOTIFICATION_HELPERS.selectAll(setDashboardIndicators, dashboardIndicators);\n    \n  const selectAllTrima = () => \n    NOTIFICATION_HELPERS.selectAll(setTrimaIndicators, trimaIndicators);\n    \n  const selectAllReveos = () => \n    NOTIFICATION_HELPERS.selectAll(setReveosIndicators, reveosIndicators);\n\n  const deselectAllDashboard = () => \n    NOTIFICATION_HELPERS.deselectAll(setDashboardIndicators, dashboardIndicators);\n    \n  const deselectAllTrima = () => \n    NOTIFICATION_HELPERS.deselectAll(setTrimaIndicators, trimaIndicators);\n    \n  const deselectAllReveos = () => \n    NOTIFICATION_HELPERS.deselectAll(setReveosIndicators, reveosIndicators);\n\n  // Função para obter rótulo de indicador\n  const getIndicatorLabel = (category, key) => {\n    try {\n      return INDICATOR_CONFIG[category].indicators[key].label;\n    } catch (error) {\n      console.warn(`Indicador não encontrado: ${category}.${key}`);\n      return key; // Fallback para o nome da chave\n    }\n  };\n\n  // Função para contar indicadores selecionados\n  const countSelectedIndicators = () => \n    NOTIFICATION_HELPERS.countSelectedItems([\n      dashboardIndicators, \n      trimaIndicators, \n      reveosIndicators\n    ]);\n\n  // Função otimizada para salvar as configurações\n  const handleSave = async () => {\n    try {\n      // Verificar se pelo menos um indicador foi selecionado\n      const hasSelectedIndicator = [\n        dashboardIndicators, \n        trimaIndicators, \n        reveosIndicators\n      ].some(NOTIFICATION_HELPERS.hasSelectedItems);\n\n      if (!hasSelectedIndicator) {\n        showSnackbar(\"Selecione pelo menos um indicador para continuar\", \"warning\");\n        return;\n      }\n\n      if (!email) {\n        showSnackbar(\"Por favor, informe um email válido\", \"warning\");\n        return;\n      }\n\n      // Obter o nome de usuário do localStorage\n      const username = localStorage.getItem(\"userName\");\n      \n      if (!username) {\n        showSnackbar(\"Erro ao salvar: Usuário não identificado\", \"warning\");\n        return;\n      }\n\n      // Mostrar indicador de carregamento para o usuário\n      showSnackbar(\"Salvando configurações...\", \"info\");\n\n      const notificationData = {\n        email,\n        frequency,\n        dashboardIndicators,\n        trimaIndicators,\n        reveosIndicators,\n        lastUpdated: new Date().toISOString(),\n        userId: localStorage.getItem(\"userId\") || \"guest\",\n        username,\n      };\n\n      // Salvar no localStorage como fallback\n      localStorage.setItem(\"notificationSettings\", JSON.stringify(notificationData));\n      console.log(\"Configurações salvas localmente no localStorage\");\n\n      // Salvar no servidor (arquivo persistente)\n      const serverSaved = await saveToServer(notificationData);\n\n      // Feedback visual para o usuário\n      if (serverSaved) {\n        showSnackbar(\"Configurações salvas com sucesso!\");\n      } else {\n        // Verificar conexão com o servidor\n        try {\n          await axios.get(`${process.env.REACT_APP_API_URL}/api/health`, {\n            timeout: 3000,\n          });\n          // Se conseguir conectar ao servidor mas falhou ao salvar\n          showSnackbar(\n            \"Configurações salvas localmente, mas houve um problema específico ao salvar no servidor. Tente novamente mais tarde.\",\n            \"warning\"\n          );\n        } catch (connectionError) {\n          // Se não conseguir conectar ao servidor\n          showSnackbar(\n            \"Configurações salvas localmente. Não foi possível conectar ao servidor. Verifique sua conexão.\",\n            \"warning\"\n          );\n        }\n      }\n    } catch (error) {\n      console.error(\"Erro ao salvar configurações:\", error);\n      showSnackbar(\"Erro ao salvar configurações. Por favor, tente novamente.\", \"error\");\n    }\n  };\n\n  const steps = [\"Selecionar Indicadores\", \"Configurar Email\", \"Revisar e Salvar\"];\n\n  const renderIndicatorSelection = () => (\n    <>\n      <MDTypography variant=\"h6\" gutterBottom>\n        Selecione os indicadores para receber notificações\n      </MDTypography>\n\n      <MDTypography variant=\"body2\" color=\"text.secondary\" mb={2}>\n        Selecione os indicadores que deseja monitorar através de notificações por email.\n      </MDTypography>\n\n      <Tabs\n        value={selectedTab}\n        onChange={handleTabChange}\n        variant=\"fullWidth\"\n        sx={{ mb: 2, borderBottom: 1, borderColor: \"divider\" }}\n      >\n        <Tab label={INDICATOR_CONFIG.dashboard.title} />\n        <Tab label={INDICATOR_CONFIG.trima.title} />\n        <Tab label={INDICATOR_CONFIG.reveos.title} />\n      </Tabs>\n\n      {/* Dashboard Indicators */}\n      <TabPanel value={selectedTab} index={0}>\n        <MDBox display=\"flex\" justifyContent=\"space-between\" mb={2}>\n          <MDTypography variant=\"subtitle1\">\n            Indicadores do Dashboard ({Object.values(dashboardIndicators).filter((v) => v).length}/\n            {Object.keys(dashboardIndicators).length})\n          </MDTypography>\n          <MDBox>\n            <Button size=\"small\" onClick={selectAllDashboard} sx={{ mr: 1 }}>\n              Selecionar Todos\n            </Button>\n            <Button size=\"small\" onClick={deselectAllDashboard}>\n              Limpar Seleção\n            </Button>\n          </MDBox>\n        </MDBox>\n\n        <Grid container spacing={2}>\n          {Object.entries(dashboardIndicators).map(([key, value]) => (\n            <Grid item xs={12} sm={6} md={4} key={key}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={value}\n                    onChange={() => handleDashboardChange(key)}\n                    color=\"primary\"\n                  />\n                }\n                label={getIndicatorLabel(\"dashboard\", key)}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n\n      {/* Trima Indicators */}\n      <TabPanel value={selectedTab} index={1}>\n        <MDBox display=\"flex\" justifyContent=\"space-between\" mb={2}>\n          <MDTypography variant=\"subtitle1\">\n            Indicadores Trima ({Object.values(trimaIndicators).filter((v) => v).length}/\n            {Object.keys(trimaIndicators).length})\n          </MDTypography>\n          <MDBox>\n            <Button size=\"small\" onClick={selectAllTrima} sx={{ mr: 1 }}>\n              Selecionar Todos\n            </Button>\n            <Button size=\"small\" onClick={deselectAllTrima}>\n              Limpar Seleção\n            </Button>\n          </MDBox>\n        </MDBox>\n\n        <Grid container spacing={2}>\n          {Object.entries(trimaIndicators).map(([key, value]) => (\n            <Grid item xs={12} sm={6} md={4} key={key}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={value}\n                    onChange={() => handleTrimaChange(key)}\n                    color=\"primary\"\n                  />\n                }\n                label={getIndicatorLabel(\"trima\", key)}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n\n      {/* Reveos Indicators */}\n      <TabPanel value={selectedTab} index={2}>\n        <MDBox display=\"flex\" justifyContent=\"space-between\" mb={2}>\n          <MDTypography variant=\"subtitle1\">\n            Indicadores Reveos ({Object.values(reveosIndicators).filter((v) => v).length}/\n            {Object.keys(reveosIndicators).length})\n          </MDTypography>\n          <MDBox>\n            <Button size=\"small\" onClick={selectAllReveos} sx={{ mr: 1 }}>\n              Selecionar Todos\n            </Button>\n            <Button size=\"small\" onClick={deselectAllReveos}>\n              Limpar Seleção\n            </Button>\n          </MDBox>\n        </MDBox>\n\n        <Grid container spacing={2}>\n          {Object.entries(reveosIndicators).map(([key, value]) => (\n            <Grid item xs={12} sm={6} md={4} key={key}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={value}\n                    onChange={() => handleReveosChange(key)}\n                    color=\"primary\"\n                  />\n                }\n                label={getIndicatorLabel(\"reveos\", key)}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n    </>\n  );\n\n  const renderEmailConfiguration = () => (\n    <>\n      <MDTypography variant=\"h6\" gutterBottom>\n        Configuração de Email\n      </MDTypography>\n\n      <MDTypography variant=\"body2\" color=\"text.secondary\" mb={3}>\n        Informe o email onde deseja receber as notificações e a frequência desejada.\n      </MDTypography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <MDInput\n            type=\"email\"\n            label=\"Email para notificações\"\n            fullWidth\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"seu.email@exemplo.com\"\n            required\n          />\n          <MDBox display=\"flex\" justifyContent=\"flex-end\" mt={1}>\n            <MDButton\n              variant=\"outlined\"\n              color=\"info\"\n              onClick={handleTestEmail}\n              disabled={!email}\n              size=\"small\"\n            >\n              Enviar Email de Teste\n            </MDButton>\n          </MDBox>\n        </Grid>\n        <Grid item xs={12}>\n          <MDInput\n            select\n            label=\"Frequência de envio\"\n            value={frequency}\n            onChange={(e) => setFrequency(e.target.value)}\n            fullWidth\n            sx={{\n              \"& .MuiSelect-select\": {\n                padding: \"0.75rem\",\n                minHeight: \"1.4375em\",\n                height: \"1.4375em\",\n                display: \"flex\",\n                alignItems: \"center\",\n              },\n              \"& .MuiInputBase-input\": {\n                height: \"1.4375em\",\n              },\n              \"& .MuiOutlinedInput-root\": {\n                paddingTop: \"0.75rem\",\n                paddingBottom: \"0.75rem\",\n              },\n            }}\n          >\n            <MenuItem value=\"daily\">Diária</MenuItem>\n            <MenuItem value=\"weekly\">Semanal</MenuItem>\n            <MenuItem value=\"monthly\">Mensal</MenuItem>\n          </MDInput>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper variant=\"outlined\" sx={{ p: 2, mt: 2, backgroundColor: \"#f8f9fa\" }}>\n            <MDTypography variant=\"subtitle2\" gutterBottom color=\"info\">\n              Informações sobre a frequência de envio:\n            </MDTypography>\n            <MDBox component=\"ul\" sx={{ pl: 2, mt: 1, mb: 0 }}>\n              <li>\n                <MDTypography variant=\"body2\" color=\"text.secondary\">\n                  <strong>Diária:</strong> Emails serão enviados todos os dias às 7h da manhã\n                </MDTypography>\n              </li>\n              <li>\n                <MDTypography variant=\"body2\" color=\"text.secondary\">\n                  <strong>Semanal:</strong> Emails serão enviados todas as segundas-feiras às 7h da\n                  manhã\n                </MDTypography>\n              </li>\n              <li>\n                <MDTypography variant=\"body2\" color=\"text.secondary\">\n                  <strong>Mensal:</strong> Emails serão enviados no primeiro dia de cada mês às 7h\n                  da manhã\n                </MDTypography>\n              </li>\n            </MDBox>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // Função para verificar se um objeto tem pelo menos um valor verdadeiro\n  const hasSelectedItems = (obj) => Object.values(obj).some((value) => value);\n\n  const renderSummary = () => (\n    <>\n      <MDTypography variant=\"h6\" gutterBottom>\n        Resumo das Configurações\n      </MDTypography>\n\n      <Paper elevation={0} variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <MDTypography variant=\"subtitle2\">Email:</MDTypography>\n            <MDTypography variant=\"body2\" mb={2}>\n              {email}\n            </MDTypography>\n\n            <MDTypography variant=\"subtitle2\">Frequência:</MDTypography>\n            <MDTypography variant=\"body2\" mb={2}>\n              {frequency === \"daily\" ? \"Diária\" : frequency === \"weekly\" ? \"Semanal\" : \"Mensal\"}\n            </MDTypography>\n\n            <MDTypography variant=\"subtitle2\">Total de indicadores selecionados:</MDTypography>\n            <MDTypography variant=\"body2\">{countSelectedIndicators()}</MDTypography>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <MDTypography variant=\"subtitle2\" gutterBottom>\n              Indicadores por categoria:\n            </MDTypography>\n            <MDBox component=\"ul\" sx={{ pl: 2, mt: 0 }}>\n              <li>\n                <MDTypography variant=\"body2\">\n                  Dashboard: {Object.values(dashboardIndicators).filter((v) => v).length}\n                </MDTypography>\n              </li>\n              <li>\n                <MDTypography variant=\"body2\">\n                  Trima: {Object.values(trimaIndicators).filter((v) => v).length}\n                </MDTypography>\n              </li>\n              <li>\n                <MDTypography variant=\"body2\">\n                  Reveos: {Object.values(reveosIndicators).filter((v) => v).length}\n                </MDTypography>\n              </li>\n            </MDBox>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <MDTypography variant=\"subtitle2\">Ver indicadores selecionados</MDTypography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {/* Verificar explicitamente se há indicadores selecionados no Dashboard */}\n          {hasSelectedItems(dashboardIndicators) && (\n            <>\n              <MDTypography variant=\"subtitle2\" gutterBottom>\n                Dashboard:\n              </MDTypography>\n              <Box component=\"ul\" sx={{ pl: 2, mt: 0 }}>\n                {Object.entries(dashboardIndicators)\n                  .filter(([_, value]) => value)\n                  .map(([key]) => (\n                    <li key={key}>\n                      <MDTypography variant=\"body2\">\n                        {getIndicatorLabel(\"dashboard\", key)}\n                      </MDTypography>\n                    </li>\n                  ))}\n              </Box>\n            </>\n          )}\n\n          {/* Verificar explicitamente se há indicadores selecionados no Trima */}\n          {hasSelectedItems(trimaIndicators) && (\n            <>\n              <MDTypography variant=\"subtitle2\" gutterBottom sx={{ mt: 2 }}>\n                Trima:\n              </MDTypography>\n              <Box component=\"ul\" sx={{ pl: 2, mt: 0 }}>\n                {Object.entries(trimaIndicators)\n                  .filter(([_, value]) => value)\n                  .map(([key]) => (\n                    <li key={key}>\n                      <MDTypography variant=\"body2\">{getIndicatorLabel(\"trima\", key)}</MDTypography>\n                    </li>\n                  ))}\n              </Box>\n            </>\n          )}\n\n          {/* Verificar explicitamente se há indicadores selecionados no Reveos */}\n          {hasSelectedItems(reveosIndicators) && (\n            <>\n              <MDTypography variant=\"subtitle2\" gutterBottom sx={{ mt: 2 }}>\n                Reveos:\n              </MDTypography>\n              <Box component=\"ul\" sx={{ pl: 2, mt: 0 }}>\n                {Object.entries(reveosIndicators)\n                  .filter(([_, value]) => value)\n                  .map(([key]) => (\n                    <li key={key}>\n                      <MDTypography variant=\"body2\">\n                        {getIndicatorLabel(\"reveos\", key)}\n                      </MDTypography>\n                    </li>\n                  ))}\n              </Box>\n            </>\n          )}\n\n          {/* Mensagem quando nenhum indicador está selecionado */}\n          {!hasSelectedItems(dashboardIndicators) &&\n            !hasSelectedItems(trimaIndicators) &&\n            !hasSelectedItems(reveosIndicators) && (\n              <MDTypography variant=\"body2\" color=\"text.secondary\" sx={{ fontStyle: \"italic\" }}>\n                Nenhum indicador selecionado.\n              </MDTypography>\n            )}\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return renderIndicatorSelection();\n      case 1:\n        return renderEmailConfiguration();\n      case 2:\n        return renderSummary();\n      default:\n        return \"Passo desconhecido\";\n    }\n  }\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <MDBox py={3}>\n        <Grid container justifyContent=\"center\" spacing={3}>\n          <Grid item xs={12} xl={10}>\n            <Card>\n              <MDBox p={3}>\n                <MDTypography variant=\"h4\" mb={3}>\n                  Configuração de Notificações\n                </MDTypography>\n\n                <Stepper activeStep={activeStep} alternativeLabel sx={{ mb: 4 }}>\n                  {steps.map((label) => (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n\n                {getStepContent(activeStep)}\n\n                <MDBox mt={4} display=\"flex\" justifyContent=\"space-between\">\n                  <Button disabled={activeStep === 0} onClick={handleBack}>\n                    Voltar\n                  </Button>\n\n                  {activeStep === steps.length - 1 ? (\n                    <MDButton variant=\"gradient\" color=\"info\" onClick={handleSave}>\n                      Salvar Configurações\n                    </MDButton>\n                  ) : (\n                    <MDButton variant=\"contained\" color=\"info\" onClick={handleNext}>\n                      Próximo\n                    </MDButton>\n                  )}\n                </MDBox>\n              </MDBox>\n            </Card>\n          </Grid>\n        </Grid>\n      </MDBox>\n\n      <Snackbar\n        open={snackbarState.open}\n        autoHideDuration={5000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbarState.severity}\n          variant=\"filled\"\n          sx={{ width: \"100%\" }}\n        >\n          {snackbarState.message}\n        </Alert>\n      </Snackbar>\n\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Notifications;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}