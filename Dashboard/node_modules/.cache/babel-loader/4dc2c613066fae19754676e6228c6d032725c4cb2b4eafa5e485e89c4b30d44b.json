{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nrequire(\"dotenv\").config({\n  path: require(\"path\").resolve(__dirname, \"../../.env\")\n});\nconst useBarChartData = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Total de Procedimentos\",\n      color: \"info\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n        const response = await fetch(`${process.env.API_URL}/api/aferese`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erro HTTP: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Ordenar dados por ano e mês\n        const dadosOrdenados = data.sort((a, b) => {\n          if (a.Ano !== b.Ano) return a.Ano - b.Ano;\n          return a.Mes - b.Mes;\n        });\n        setChartData({\n          labels: dadosOrdenados.map(item => `${item.Mes}/${item.Ano}`),\n          datasets: [{\n            label: \"Total de Procedimentos\",\n            color: \"info\",\n            data: dadosOrdenados.map(item => item.TotalProcedimentos)\n          }]\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n        // Dados de fallback em caso de erro\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [{\n            label: \"Total de Procedimentos\",\n            color: \"info\",\n            data: [0]\n          }]\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  return chartData;\n};\n_s(useBarChartData, \"IjWCu2g32hAtciLeIyhi2LzqTjo=\");\nexport default useBarChartData;","map":{"version":3,"names":["useState","useEffect","require","config","path","resolve","__dirname","useBarChartData","_s","chartData","setChartData","labels","datasets","label","color","data","fetchData","token","localStorage","getItem","Error","response","fetch","process","env","API_URL","method","headers","Authorization","ok","status","json","dadosOrdenados","sort","a","b","Ano","Mes","map","item","TotalProcedimentos","error","console"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/dashboard/data/totalAferese.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nrequire(\"dotenv\").config({ path: require(\"path\").resolve(__dirname, \"../../.env\") });\n\nconst useBarChartData = () => {\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Total de Procedimentos\",\n        color: \"info\",\n        data: [],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n\n        const response = await fetch(`${process.env.API_URL}/api/aferese`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erro HTTP: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        // Ordenar dados por ano e mês\n        const dadosOrdenados = data.sort((a, b) => {\n          if (a.Ano !== b.Ano) return a.Ano - b.Ano;\n          return a.Mes - b.Mes;\n        });\n\n        setChartData({\n          labels: dadosOrdenados.map((item) => `${item.Mes}/${item.Ano}`),\n          datasets: [\n            {\n              label: \"Total de Procedimentos\",\n              color: \"info\",\n              data: dadosOrdenados.map((item) => item.TotalProcedimentos),\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n        // Dados de fallback em caso de erro\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [\n            {\n              label: \"Total de Procedimentos\",\n              color: \"info\",\n              data: [0],\n            },\n          ],\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return chartData;\n};\n\nexport default useBarChartData;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3CC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC;EAAEC,IAAI,EAAEF,OAAO,CAAC,MAAM,CAAC,CAACG,OAAO,CAACC,SAAS,EAAE,YAAY;AAAE,CAAC,CAAC;AAEpF,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACzCW,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,wBAAwB;MAC/BC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,IAAI,CAACF,KAAK,EAAE;UACV,MAAM,IAAIG,KAAK,CAAC,yCAAyC,CAAC;QAC5D;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,OAAO,cAAc,EAAE;UACjEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAI,CAACI,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIT,KAAK,CAAC,cAAcC,QAAQ,CAACS,MAAM,EAAE,CAAC;QAClD;QAEA,MAAMf,IAAI,GAAG,MAAMM,QAAQ,CAACU,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,cAAc,GAAGjB,IAAI,CAACkB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzC,IAAID,CAAC,CAACE,GAAG,KAAKD,CAAC,CAACC,GAAG,EAAE,OAAOF,CAAC,CAACE,GAAG,GAAGD,CAAC,CAACC,GAAG;UACzC,OAAOF,CAAC,CAACG,GAAG,GAAGF,CAAC,CAACE,GAAG;QACtB,CAAC,CAAC;QAEF3B,YAAY,CAAC;UACXC,MAAM,EAAEqB,cAAc,CAACM,GAAG,CAAEC,IAAI,IAAK,GAAGA,IAAI,CAACF,GAAG,IAAIE,IAAI,CAACH,GAAG,EAAE,CAAC;UAC/DxB,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,wBAAwB;YAC/BC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAEiB,cAAc,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,kBAAkB;UAC5D,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;QACA/B,YAAY,CAAC;UACXC,MAAM,EAAE,CAAC,WAAW,CAAC;UACrBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,wBAAwB;YAC/BC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,CAAC,CAAC;UACV,CAAC;QAEL,CAAC,CAAC;MACJ;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOP,SAAS;AAClB,CAAC;AAACD,EAAA,CAtEID,eAAe;AAwErB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}