{"ast":null,"code":"var _jsxFileName = \"/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/trima/components/lastDonations/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Data\nimport DataTable from \"examples/Tables/DataTable\";\n\n// Componente para célula personalizada\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomCell = ({\n  value\n}) => /*#__PURE__*/_jsxDEV(MDTypography, {\n  component: \"a\",\n  href: \"#\",\n  onClick: e => {\n    e.preventDefault();\n    value.onClick();\n  },\n  variant: \"caption\",\n  color: \"text\",\n  fontWeight: \"medium\",\n  sx: {\n    cursor: \"pointer\"\n  },\n  children: value.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n// Definindo PropTypes para o componente CustomCell\n_c = CustomCell;\nCustomCell.propTypes = {\n  value: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  }).isRequired\n};\nfunction LastDonations() {\n  _s();\n  const [doacoesData, setDoacoesData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n        const response = await fetch(\"http://localhost:8001/api/apheresisProcedures\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const dados = data.map(doacao => {\n          const dataProcedimento = new Date(doacao.DataProcedimento);\n          // Formatando a data no formato dd/mm/yy\n          const dataFormatada = `${String(dataProcedimento.getDate()).padStart(2, \"0\")}/${String(dataProcedimento.getMonth() + 1).padStart(2, \"0\")}/${dataProcedimento.getFullYear().toString().slice(-2)}`;\n          // Formatando a hora no formato hh:mm\n          const horaFormatada = `${String(dataProcedimento.getHours()).padStart(2, \"0\")}:${String(dataProcedimento.getMinutes()).padStart(2, \"0\")}`;\n          return {\n            codigo: doacao.CodigoDoacao,\n            data: dataFormatada,\n            hora: horaFormatada\n          };\n        });\n        setDoacoesData(dados);\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const columns = [{\n    Header: \"Código doação\",\n    accessor: \"codigo\",\n    width: \"40%\",\n    Cell: cellProps => /*#__PURE__*/_jsxDEV(CustomCell, {\n      value: {\n        text: cellProps.value\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 28\n    }, this)\n  }, {\n    Header: \"Data\",\n    accessor: \"data\",\n    width: \"30%\",\n    Cell: cellProps => /*#__PURE__*/_jsxDEV(CustomCell, {\n      value: {\n        text: cellProps.value\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 28\n    }, this)\n  }, {\n    Header: \"Hora Inicio\",\n    accessor: \"hora\",\n    width: \"30%\",\n    Cell: cellProps => /*#__PURE__*/_jsxDEV(CustomCell, {\n      value: {\n        text: cellProps.value\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 28\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(MDBox, {\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h4\",\n          children: \"\\xDAltimas Af\\xE9reses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: doacoesData && doacoesData.length > 0 ? /*#__PURE__*/_jsxDEV(DataTable, {\n        entriesPerPage: {\n          defaultValue: 10\n        },\n        showTotalEntries: false,\n        canSearch: true,\n        isSorted: false,\n        table: {\n          columns: columns,\n          rows: doacoesData\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MDTypography, {\n        children: \"Nenhuma doa\\xE7\\xE3o encontrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(LastDonations, \"z2R/ztCKn3odNOsCoy9JAflLg3c=\");\n_c2 = LastDonations;\nexport default LastDonations;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomCell\");\n$RefreshReg$(_c2, \"LastDonations\");","map":{"version":3,"names":["useState","useEffect","PropTypes","Card","MDBox","MDTypography","DataTable","jsxDEV","_jsxDEV","CustomCell","value","component","href","onClick","e","preventDefault","variant","color","fontWeight","sx","cursor","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","shape","string","isRequired","func","LastDonations","_s","doacoesData","setDoacoesData","fetchData","token","localStorage","getItem","Error","response","fetch","method","headers","Authorization","data","json","dados","map","doacao","dataProcedimento","Date","DataProcedimento","dataFormatada","String","getDate","padStart","getMonth","getFullYear","toString","slice","horaFormatada","getHours","getMinutes","codigo","CodigoDoacao","hora","error","console","columns","Header","accessor","width","Cell","cellProps","display","justifyContent","alignItems","p","length","entriesPerPage","defaultValue","showTotalEntries","canSearch","isSorted","table","rows","_c2","$RefreshReg$"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/trima/components/lastDonations/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Data\nimport DataTable from \"examples/Tables/DataTable\";\n\n// Componente para célula personalizada\nconst CustomCell = ({ value }) => (\n  <MDTypography\n    component=\"a\"\n    href=\"#\"\n    onClick={(e) => {\n      e.preventDefault();\n      value.onClick();\n    }}\n    variant=\"caption\"\n    color=\"text\"\n    fontWeight=\"medium\"\n    sx={{ cursor: \"pointer\" }}\n  >\n    {value.text}\n  </MDTypography>\n);\n\n// Definindo PropTypes para o componente CustomCell\nCustomCell.propTypes = {\n  value: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nfunction LastDonations() {\n  const [doacoesData, setDoacoesData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n\n        const response = await fetch(\"http://localhost:8001/api/apheresisProcedures\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        const dados = data.map((doacao) => {\n          const dataProcedimento = new Date(doacao.DataProcedimento);\n          // Formatando a data no formato dd/mm/yy\n          const dataFormatada = `${String(dataProcedimento.getDate()).padStart(2, \"0\")}/${String(\n            dataProcedimento.getMonth() + 1\n          ).padStart(2, \"0\")}/${dataProcedimento.getFullYear().toString().slice(-2)}`;\n          // Formatando a hora no formato hh:mm\n          const horaFormatada = `${String(dataProcedimento.getHours()).padStart(2, \"0\")}:${String(\n            dataProcedimento.getMinutes()\n          ).padStart(2, \"0\")}`;\n          return {\n            codigo: doacao.CodigoDoacao,\n            data: dataFormatada,\n            hora: horaFormatada,\n          };\n        });\n        setDoacoesData(dados);\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const columns = [\n    {\n      Header: \"Código doação\",\n      accessor: \"codigo\",\n      width: \"40%\",\n      Cell: (cellProps) => <CustomCell value={{ text: cellProps.value }} />,\n    },\n    {\n      Header: \"Data\",\n      accessor: \"data\",\n      width: \"30%\",\n      Cell: (cellProps) => <CustomCell value={{ text: cellProps.value }} />,\n    },\n    {\n      Header: \"Hora Inicio\",\n      accessor: \"hora\",\n      width: \"30%\",\n      Cell: (cellProps) => <CustomCell value={{ text: cellProps.value }} />,\n    },\n  ];\n\n  return (\n    <Card>\n      <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\n        <MDBox>\n          <MDTypography variant=\"h4\">Últimas Aféreses</MDTypography>\n        </MDBox>\n      </MDBox>\n      <MDBox>\n        {doacoesData && doacoesData.length > 0 ? (\n          <DataTable\n            entriesPerPage={{ defaultValue: 10 }}\n            showTotalEntries={false}\n            canSearch={true}\n            isSorted={false}\n            table={{\n              columns: columns,\n              rows: doacoesData,\n            }}\n          />\n        ) : (\n          <MDTypography>Nenhuma doação encontrada</MDTypography>\n        )}\n      </MDBox>\n    </Card>\n  );\n}\n\nexport default LastDonations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}