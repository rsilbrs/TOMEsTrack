{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useAlarmFrequencyData = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Percentual\",\n      color: \"error\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const apiUrl = process.env.REACT_APP_API_URL;\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n        const response = await fetch(`${apiUrl}/api/reveosAlarms`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            localStorage.removeItem(\"authToken\");\n            window.location.href = \"/authentication/sign-in\";\n            return;\n          }\n          throw new Error(`Erro HTTP: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Formatar os labels para mostrar apenas o nome do alarme (remove o código e o ID)\n        const formatLabel = message => {\n          // Remove o código do início (assume que o código é seguido por um espaço) e remove o ID do final\n          const alarmName = message.split(\" \").slice(1, -1).join(\" \");\n          // Trunca a mensagem se for muito longa\n          return `${alarmName}}`;\n        };\n        setChartData({\n          labels: data.map(item => formatLabel(item.Message)),\n          datasets: [{\n            label: \"Frequência de Alarmes (%)\",\n            color: \"error\",\n            data: data.map(item => item.Percentual),\n            // Adiciona o símbolo % após cada valor no tooltip\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return `${context.parsed.y}%`;\n                }\n              }\n            }\n          }]\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [{\n            label: \"Frequência de Alarmes (%)\",\n            color: \"error\",\n            data: [0]\n          }]\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  return chartData;\n};\n_s(useAlarmFrequencyData, \"c7mZpvYWll1PHGSFpgHhXXUivmA=\");\nexport default useAlarmFrequencyData;","map":{"version":3,"names":["useState","useEffect","useAlarmFrequencyData","_s","chartData","setChartData","labels","datasets","label","color","data","fetchData","token","localStorage","getItem","apiUrl","process","env","REACT_APP_API_URL","Error","response","fetch","method","headers","Authorization","ok","status","removeItem","window","location","href","json","formatLabel","message","alarmName","split","slice","join","map","item","Message","Percentual","tooltip","callbacks","context","parsed","y","error","console"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/reveos/components/data/alarmFrequency.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useAlarmFrequencyData = () => {\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Percentual\",\n        color: \"error\",\n        data: [],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const apiUrl = process.env.REACT_APP_API_URL;\n\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n\n        const response = await fetch(`${apiUrl}/api/reveosAlarms`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            localStorage.removeItem(\"authToken\");\n            window.location.href = \"/authentication/sign-in\";\n            return;\n          }\n          throw new Error(`Erro HTTP: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        // Formatar os labels para mostrar apenas o nome do alarme (remove o código e o ID)\n        const formatLabel = (message) => {\n          // Remove o código do início (assume que o código é seguido por um espaço) e remove o ID do final\n          const alarmName = message.split(\" \").slice(1, -1).join(\" \");\n          // Trunca a mensagem se for muito longa\n          return `${alarmName}}`;\n        };\n\n        setChartData({\n          labels: data.map((item) => formatLabel(item.Message)),\n          datasets: [\n            {\n              label: \"Frequência de Alarmes (%)\",\n              color: \"error\",\n              data: data.map((item) => item.Percentual),\n              // Adiciona o símbolo % após cada valor no tooltip\n              tooltip: {\n                callbacks: {\n                  label: function (context) {\n                    return `${context.parsed.y}%`;\n                  },\n                },\n              },\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [\n            {\n              label: \"Frequência de Alarmes (%)\",\n              color: \"error\",\n              data: [0],\n            },\n          ],\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return chartData;\n};\n\nexport default useAlarmFrequencyData;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC;IACzCM,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,YAAY;MACnBC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;QAE5C,IAAI,CAACN,KAAK,EAAE;UACV,MAAM,IAAIO,KAAK,CAAC,yCAAyC,CAAC;QAC5D;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,MAAM,mBAAmB,EAAE;UACzDO,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAUZ,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAI,CAACQ,QAAQ,CAACK,EAAE,EAAE;UAChB,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAIN,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;YACtDb,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC;YACpCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,yBAAyB;YAChD;UACF;UACA,MAAM,IAAIX,KAAK,CAAC,cAAcC,QAAQ,CAACM,MAAM,EAAE,CAAC;QAClD;QAEA,MAAMhB,IAAI,GAAG,MAAMU,QAAQ,CAACW,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,WAAW,GAAIC,OAAO,IAAK;UAC/B;UACA,MAAMC,SAAS,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;UAC3D;UACA,OAAO,GAAGH,SAAS,GAAG;QACxB,CAAC;QAED7B,YAAY,CAAC;UACXC,MAAM,EAAEI,IAAI,CAAC4B,GAAG,CAAEC,IAAI,IAAKP,WAAW,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;UACrDjC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,2BAA2B;YAClCC,KAAK,EAAE,OAAO;YACdC,IAAI,EAAEA,IAAI,CAAC4B,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,UAAU,CAAC;YACzC;YACAC,OAAO,EAAE;cACPC,SAAS,EAAE;gBACTnC,KAAK,EAAE,SAAAA,CAAUoC,OAAO,EAAE;kBACxB,OAAO,GAAGA,OAAO,CAACC,MAAM,CAACC,CAAC,GAAG;gBAC/B;cACF;YACF;UACF,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C1C,YAAY,CAAC;UACXC,MAAM,EAAE,CAAC,WAAW,CAAC;UACrBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,2BAA2B;YAClCC,KAAK,EAAE,OAAO;YACdC,IAAI,EAAE,CAAC,CAAC;UACV,CAAC;QAEL,CAAC,CAAC;MACJ;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOP,SAAS;AAClB,CAAC;AAACD,EAAA,CAtFID,qBAAqB;AAwF3B,eAAeA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}