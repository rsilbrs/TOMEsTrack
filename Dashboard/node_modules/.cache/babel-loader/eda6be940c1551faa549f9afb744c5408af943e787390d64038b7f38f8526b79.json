{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useBarChartData = () => {\n  _s();\n  const measureType = \"hematocrit\"; // [hematocrit/hemoglobin]\n\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: measureType === \"hematocrit\" ? \"Média Ht (%)\" : \"Média Hb (g/dL)\",\n      color: \"Error\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const apiUrl = process.env.REACT_APP_API_URL; // Fallback URL\n\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n        const response = await fetch(`${apiUrl}/api/donorHtHb`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            localStorage.removeItem(\"authToken\"); // Remove token inválido\n            window.location.href = \"/authentication/sign-in\"; // Redireciona para login\n            return;\n          }\n          throw new Error(`Erro HTTP: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Ordenar dados por ano e mês\n        const dadosOrdenados = data.sort((a, b) => {\n          if (a.Ano !== b.Ano) return a.Ano - b.Ano;\n          return a.Mes - b.Mes;\n        });\n        setChartData({\n          labels: dadosOrdenados.map(item => `${item.Mes}/${item.Ano}`),\n          datasets: [{\n            label: measureType === \"hematocrit\" ? \"Média Ht (%)\" : \"Média Hb (g/dL)\",\n            color: \"Info\",\n            data: dadosOrdenados.map(item => measureType === \"hematocrit\" ? item.MediaHematocrit : item.MediaHemoglobin)\n          }]\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n\n        // Dados de fallback em caso de erro\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [{\n            label: measureType === \"hematocrit\" ? \"Média Ht (%)\" : \"Média Hb (g/dL)\",\n            color: \"Error\",\n            data: [0]\n          }]\n        });\n      }\n    };\n    fetchData();\n  }, [measureType]);\n  return chartData;\n};\n_s(useBarChartData, \"NB63DIYR6RCC6QWew85RYhxPKrQ=\");\nexport default useBarChartData;","map":{"version":3,"names":["useState","useEffect","useBarChartData","_s","measureType","chartData","setChartData","labels","datasets","label","color","data","fetchData","token","localStorage","getItem","apiUrl","process","env","REACT_APP_API_URL","Error","response","fetch","method","headers","Authorization","ok","status","removeItem","window","location","href","json","dadosOrdenados","sort","a","b","Ano","Mes","map","item","MediaHematocrit","MediaHemoglobin","error","console"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/trima/components/data/hthb.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useBarChartData = () => {\n  const measureType = \"hematocrit\"; // [hematocrit/hemoglobin]\n\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: measureType === \"hematocrit\" ? \"Média Ht (%)\" : \"Média Hb (g/dL)\",\n        color: \"Error\",\n        data: [],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const apiUrl = process.env.REACT_APP_API_URL; // Fallback URL\n\n        if (!token) {\n          throw new Error(\"Nenhum token de autenticação encontrado\");\n        }\n\n        const response = await fetch(`${apiUrl}/api/donorHtHb`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            localStorage.removeItem(\"authToken\"); // Remove token inválido\n            window.location.href = \"/authentication/sign-in\"; // Redireciona para login\n            return;\n          }\n          throw new Error(`Erro HTTP: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        // Ordenar dados por ano e mês\n        const dadosOrdenados = data.sort((a, b) => {\n          if (a.Ano !== b.Ano) return a.Ano - b.Ano;\n          return a.Mes - b.Mes;\n        });\n\n        setChartData({\n          labels: dadosOrdenados.map((item) => `${item.Mes}/${item.Ano}`),\n          datasets: [\n            {\n              label: measureType === \"hematocrit\" ? \"Média Ht (%)\" : \"Média Hb (g/dL)\",\n              color: \"Info\",\n              data: dadosOrdenados.map((item) =>\n                measureType === \"hematocrit\" ? item.MediaHematocrit : item.MediaHemoglobin\n              ),\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n\n        // Dados de fallback em caso de erro\n        setChartData({\n          labels: [\"Sem dados\"],\n          datasets: [\n            {\n              label: measureType === \"hematocrit\" ? \"Média Ht (%)\" : \"Média Hb (g/dL)\",\n              color: \"Error\",\n              data: [0],\n            },\n          ],\n        });\n      }\n    };\n\n    fetchData();\n  }, [measureType]);\n\n  return chartData;\n};\n\nexport default useBarChartData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}