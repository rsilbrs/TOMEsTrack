{"ast":null,"code":"var _jsxFileName = \"/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/authentication/ProtectedRoute.js\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  const token = localStorage.getItem(\"authToken\");\n\n  // Função de logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"authToken\"); // Remove o token do localStorage\n    window.location.href = \"/authentication/sign-in\"; // Redireciona para a página de login\n  };\n\n  // Se não houver token, redireciona para sign-in\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/authentication/sign-in\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Chame a função de logout ao clicar em um botão ou link\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","Outlet","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","token","localStorage","getItem","handleLogout","removeItem","window","location","href","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","_c","$RefreshReg$"],"sources":["/Users/ricardosilva/Desktop/Projeto/Dashboard/src/layouts/authentication/ProtectedRoute.js"],"sourcesContent":["import { Navigate, Outlet } from \"react-router-dom\";\n\nconst ProtectedRoute = () => {\n  const token = localStorage.getItem(\"authToken\");\n\n  // Função de logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"authToken\"); // Remove o token do localStorage\n    window.location.href = \"/authentication/sign-in\"; // Redireciona para a página de login\n  };\n\n  // Se não houver token, redireciona para sign-in\n  if (!token) {\n    return <Navigate to=\"/authentication/sign-in\" replace />;\n  }\n\n  // Chame a função de logout ao clicar em um botão ou link\n  return (\n    <>\n      <Outlet />\n      <button onClick={handleLogout}>Logout</button>\n      {/* O botão ainda pode ser mantido, mas agora redireciona imediatamente */}\n    </>\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;;EAE/C;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;IACtCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,yBAAyB,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,IAAI,CAACP,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC,yBAAyB;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1D;;EAEA;EACA,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACF,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA;MAAQmB,OAAO,EAAEZ,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAE9C,CAAC;AAEP,CAAC;AAACG,EAAA,GAtBIjB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}